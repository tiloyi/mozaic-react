@import "settings-tools/_all-settings";

$gapSizes: (
    "025": $mu025,
    "050": $mu050,
    "075": $mu075,
    "100": $mu100,
    "125": $mu125,
    "150": $mu150,
    "200": $mu200,
    "250": $mu250,
    "300": $mu300,
    "350": $mu350,
    "400": $mu400,
    "500": $mu500,
    "600": $mu600,
    "700": $mu700,
    "800": $mu800,
    "900": $mu900,
    "1000": $mu1000
);

$flexDirections: row, row-reverse, column, column-reverse;
$flexWraps: nowrap, wrap, wrap-reverse;
$justifyContentVariants: flex-start, flex-end, center, space-between, space-around, space-evenly;
$alignContentVariants: flex-start, flex-end, center, space-between, space-around, space-evenly, stretch;
$alignItemsVariants: flex-start, flex-end, center, baseline, stretch;

.ml-flex {
    display: flex;

    &--fd {
        @each $direction in $flexDirections {
            &-#{$direction} {
                flex-direction: $direction;
            }
        }
    }

    &--fw {
        @each $wrap in $flexWraps {
            &-#{$wrap} {
                flex-wrap: $wrap;
            }
        }
    }

    &--jc {
        @each $variant in $justifyContentVariants {
            &-#{$variant} {
                justify-content: $variant;
            }
        }
    }

    &--ac {
        @each $variant in $alignContentVariants {
            &-#{$variant} {
                align-content: $variant;
            }
        }
    }

    &--ai {
        @each $variant in $alignItemsVariants {
            &-#{$variant} {
                align-items: $variant;
            }
        }
    }

    @each $gapSizeName, $gapSizeValue in $gapSizes {
        &--g-#{$gapSizeName} {
            gap: $gapSizeValue;
        }

        &--rg-#{$gapSizeName} {
            row-gap: $gapSizeValue;
        }

        &--cg-#{$gapSizeName} {
            column-gap: $gapSizeValue;
        }
    }
}
